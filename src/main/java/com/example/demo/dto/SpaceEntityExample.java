package com.example.demo.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SpaceEntityExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public SpaceEntityExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSpaceIdIsNull() {
            addCriterion("space_id is null");
            return (Criteria) this;
        }

        public Criteria andSpaceIdIsNotNull() {
            addCriterion("space_id is not null");
            return (Criteria) this;
        }

        public Criteria andSpaceIdEqualTo(Integer value) {
            addCriterion("space_id =", value, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdNotEqualTo(Integer value) {
            addCriterion("space_id <>", value, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdGreaterThan(Integer value) {
            addCriterion("space_id >", value, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("space_id >=", value, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdLessThan(Integer value) {
            addCriterion("space_id <", value, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdLessThanOrEqualTo(Integer value) {
            addCriterion("space_id <=", value, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdIn(List<Integer> values) {
            addCriterion("space_id in", values, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdNotIn(List<Integer> values) {
            addCriterion("space_id not in", values, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdBetween(Integer value1, Integer value2) {
            addCriterion("space_id between", value1, value2, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceIdNotBetween(Integer value1, Integer value2) {
            addCriterion("space_id not between", value1, value2, "spaceId");
            return (Criteria) this;
        }

        public Criteria andSpaceNameIsNull() {
            addCriterion("space_name is null");
            return (Criteria) this;
        }

        public Criteria andSpaceNameIsNotNull() {
            addCriterion("space_name is not null");
            return (Criteria) this;
        }

        public Criteria andSpaceNameEqualTo(String value) {
            addCriterion("space_name =", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameNotEqualTo(String value) {
            addCriterion("space_name <>", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameGreaterThan(String value) {
            addCriterion("space_name >", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameGreaterThanOrEqualTo(String value) {
            addCriterion("space_name >=", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameLessThan(String value) {
            addCriterion("space_name <", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameLessThanOrEqualTo(String value) {
            addCriterion("space_name <=", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameLike(String value) {
            addCriterion("space_name like", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameNotLike(String value) {
            addCriterion("space_name not like", value, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameIn(List<String> values) {
            addCriterion("space_name in", values, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameNotIn(List<String> values) {
            addCriterion("space_name not in", values, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameBetween(String value1, String value2) {
            addCriterion("space_name between", value1, value2, "spaceName");
            return (Criteria) this;
        }

        public Criteria andSpaceNameNotBetween(String value1, String value2) {
            addCriterion("space_name not between", value1, value2, "spaceName");
            return (Criteria) this;
        }

        public Criteria andScopeIdIsNull() {
            addCriterion("scope_Id is null");
            return (Criteria) this;
        }

        public Criteria andScopeIdIsNotNull() {
            addCriterion("scope_Id is not null");
            return (Criteria) this;
        }

        public Criteria andScopeIdEqualTo(Integer value) {
            addCriterion("scope_Id =", value, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdNotEqualTo(Integer value) {
            addCriterion("scope_Id <>", value, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdGreaterThan(Integer value) {
            addCriterion("scope_Id >", value, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("scope_Id >=", value, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdLessThan(Integer value) {
            addCriterion("scope_Id <", value, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdLessThanOrEqualTo(Integer value) {
            addCriterion("scope_Id <=", value, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdIn(List<Integer> values) {
            addCriterion("scope_Id in", values, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdNotIn(List<Integer> values) {
            addCriterion("scope_Id not in", values, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdBetween(Integer value1, Integer value2) {
            addCriterion("scope_Id between", value1, value2, "scopeId");
            return (Criteria) this;
        }

        public Criteria andScopeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("scope_Id not between", value1, value2, "scopeId");
            return (Criteria) this;
        }

        public Criteria andIsSimpleIsNull() {
            addCriterion("is_simple is null");
            return (Criteria) this;
        }

        public Criteria andIsSimpleIsNotNull() {
            addCriterion("is_simple is not null");
            return (Criteria) this;
        }

        public Criteria andIsSimpleEqualTo(Boolean value) {
            addCriterion("is_simple =", value, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleNotEqualTo(Boolean value) {
            addCriterion("is_simple <>", value, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleGreaterThan(Boolean value) {
            addCriterion("is_simple >", value, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_simple >=", value, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleLessThan(Boolean value) {
            addCriterion("is_simple <", value, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleLessThanOrEqualTo(Boolean value) {
            addCriterion("is_simple <=", value, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleIn(List<Boolean> values) {
            addCriterion("is_simple in", values, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleNotIn(List<Boolean> values) {
            addCriterion("is_simple not in", values, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleBetween(Boolean value1, Boolean value2) {
            addCriterion("is_simple between", value1, value2, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsSimpleNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_simple not between", value1, value2, "isSimple");
            return (Criteria) this;
        }

        public Criteria andIsEnableIsNull() {
            addCriterion("is_enable is null");
            return (Criteria) this;
        }

        public Criteria andIsEnableIsNotNull() {
            addCriterion("is_enable is not null");
            return (Criteria) this;
        }

        public Criteria andIsEnableEqualTo(Boolean value) {
            addCriterion("is_enable =", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableNotEqualTo(Boolean value) {
            addCriterion("is_enable <>", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableGreaterThan(Boolean value) {
            addCriterion("is_enable >", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_enable >=", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableLessThan(Boolean value) {
            addCriterion("is_enable <", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableLessThanOrEqualTo(Boolean value) {
            addCriterion("is_enable <=", value, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableIn(List<Boolean> values) {
            addCriterion("is_enable in", values, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableNotIn(List<Boolean> values) {
            addCriterion("is_enable not in", values, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableBetween(Boolean value1, Boolean value2) {
            addCriterion("is_enable between", value1, value2, "isEnable");
            return (Criteria) this;
        }

        public Criteria andIsEnableNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_enable not between", value1, value2, "isEnable");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampIsNull() {
            addCriterion("update_timestamp is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampIsNotNull() {
            addCriterion("update_timestamp is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampEqualTo(Date value) {
            addCriterion("update_timestamp =", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampNotEqualTo(Date value) {
            addCriterion("update_timestamp <>", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampGreaterThan(Date value) {
            addCriterion("update_timestamp >", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampGreaterThanOrEqualTo(Date value) {
            addCriterion("update_timestamp >=", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampLessThan(Date value) {
            addCriterion("update_timestamp <", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampLessThanOrEqualTo(Date value) {
            addCriterion("update_timestamp <=", value, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampIn(List<Date> values) {
            addCriterion("update_timestamp in", values, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampNotIn(List<Date> values) {
            addCriterion("update_timestamp not in", values, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampBetween(Date value1, Date value2) {
            addCriterion("update_timestamp between", value1, value2, "updateTimestamp");
            return (Criteria) this;
        }

        public Criteria andUpdateTimestampNotBetween(Date value1, Date value2) {
            addCriterion("update_timestamp not between", value1, value2, "updateTimestamp");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table todo_space_details
     *
     * @mbg.generated do_not_delete_during_merge Sat Mar 20 11:55:21 JST 2021
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table todo_space_details
     *
     * @mbg.generated Sat Mar 20 11:55:21 JST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}